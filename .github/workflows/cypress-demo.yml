name: CI Cypress Demo

on:
  push:
    branches:
      - anil/STP-3415-automate-testing-in-github-actions
#   pull_request:
#     branches:
#       - main

permissions: read-all

jobs:
  build:
    name: Build, lint and unit tests
    runs-on: ubuntu-latest
    outputs:
      plugin-id: ${{ steps.metadata.outputs.plugin-id }}
      plugin-version: ${{ steps.metadata.outputs.plugin-version }}
      has-e2e: ${{ steps.check-for-e2e.outputs.has-e2e }}
      has-backend: ${{ steps.check-for-backend.outputs.has-backend }}
    env:
      GRAFANA_ACCESS_POLICY_TOKEN: ${{ secrets.GRAFANA_ACCESS_POLICY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build frontend
        run: npm run build

      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build backend
        uses: magefile/mage-action@v3
        with:
          version: latest
          args: buildAll

      - name: Start Grafana
        run: |
          docker compose up -d
      - name: Wait for Grafana to start
        uses: nev7n/wait_for_response@v1
        with:
          url: 'http://localhost:3000/'
          responseCode: 200
          timeout: 60000
          interval: 500

      # Install npm dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress E2E run
        uses: cypress-io/github-action@v6
        id: run-cypress-e2e-tests
        with:
          config-file: cypress/config/cypress.config.ts
          config: baseUrl=http://localhost:3000,video=true
          browser: chrome
          #   build: yarn run build
          #   start: yarn run dev
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 60
        env:
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Cypress env vars
          PINOT_CONNECTION_CONTROLLER_URL: ${{ secrets.E2E_PINOT_CONNECTION_CONTROLLER_URL }}
          PINOT_CONNECTION_BROKER_URL: ${{ secrets.E2E_PINOT_CONNECTION_BROKER_URL }}
          PINOT_CONNECTION_DATABASE: ${{ secrets.E2E_PINOT_CONNECTION_DATABASE }}
          PINOT_CONNECTION_AUTH_TOKEN: ${{ secrets.E2E_PINOT_CONNECTION_AUTH_TOKEN }}

      # Upload cypress screenshots on failure
      - name: Upload cypress screenshots artifact
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 30

      # Upload cypress videos
      - name: Upload cypress videos artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 30

      - name: Docker logs
        if: ${{ always() && steps.run-cypress-e2e-tests.outcome == 'failure' }}
        run: |
          docker logs startree-pinot-datasource >& grafana-server.log
      - name: Stop grafana docker
        run: docker compose down
        if: always()

      - name: Upload server log
        uses: actions/upload-artifact@v4
        if: ${{ always() && steps.run-cypress-e2e-tests.outcome == 'failure' }}
        with:
          name: cypress-e2e-${{github.run_id}}-server-log
          path: grafana-server.log
          retention-days: 5
