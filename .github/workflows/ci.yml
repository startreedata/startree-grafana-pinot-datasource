name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: read-all

jobs:
  test_backend:
    name: Test Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: repo.startreedata.io/startree-docker-registry
          username: ${{ secrets.MVN_ARTIFACTORY_USERNAME }}
          password: ${{ secrets.MVN_ARTIFACTORY_TOKEN }}

      - name: Start Pinot
        run: docker compose up pinot --detach

      - name: Install Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache-dependency-path: 'go.sum'

      - name: Setup Pinot
        run: go run cmd/testsetup/main.go

      - name: Run unit tests
        uses: magefile/mage-action@v3
        with:
          version: latest
          args: coverage

  test_frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - run: yarn install --frozen-lockfile
      - run: npm run typecheck
      - run: npm run lint
      - run: npm run test:ci

  build_plugin:
    name: Build Plugin
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache-dependency-path: 'go.sum'

      - name: Install Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - run: go run cmd/release/main.go build_backend
      - run: yarn install --frozen-lockfile
      - run: yarn run build

      - run: tar cf dist.tar dist

      - name: Upload plugin
        uses: actions/upload-artifact@v4
        with:
          name: dist.tar
          path: dist.tar
          retention-days: 30

  end_to_end:
    name: Test E2E
    runs-on: ubuntu-latest
    needs: [ build_plugin ]
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: repo.startreedata.io/startree-docker-registry
          username: ${{ secrets.MVN_ARTIFACTORY_USERNAME }}
          password: ${{ secrets.MVN_ARTIFACTORY_TOKEN }}

      - name: Install Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Download plugin
        uses: actions/download-artifact@v4
        with:
          name: dist.tar

      - run: tar xf dist.tar

      - name: Start Grafana
        run: docker compose up grafana --wait

      - name: Cypress E2E run
        uses: cypress-io/github-action@v6
        id: run-cypress-e2e-tests
        with:
          config-file: cypress/config/cypress.config.ts
          browser: chrome
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 60
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PINOT_CONNECTION_CONTROLLER_URL: ${{ secrets.E2E_PINOT_CONNECTION_CONTROLLER_URL }}
          PINOT_CONNECTION_BROKER_URL: ${{ secrets.E2E_PINOT_CONNECTION_BROKER_URL }}
          PINOT_CONNECTION_DATABASE: ${{ secrets.E2E_PINOT_CONNECTION_DATABASE }}
          PINOT_CONNECTION_AUTH_TOKEN: ${{ secrets.E2E_PINOT_CONNECTION_AUTH_TOKEN }}

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: ${{ failure() && steps.run-cypress-e2e-tests.outcome == 'failure' }}
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 30

      - name: Collect Grafana logs
        run: docker compose logs grafana > grafana.log

      - name: Upload Grafana logs
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          path: grafana.log
          retention-days: 30
