name: Publish to Grafana Marketplace

on:
  workflow_dispatch:
    inputs:
      dev_release:
        description: "Dev release for testing"
        type: boolean

run-name: ${{ inputs.dev_release && 'Dev Release' || 'Release' }} from ${{ github.ref_name }} triggered by @${{ github.actor }}

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Display build info
        run: |
          echo "Building from branch: ${{ github.ref_name }}"
          echo "Dev release mode: ${{ inputs.dev_release }}"
          echo "Current commit: $(git rev-parse HEAD)"
          echo "Current branch: $(git branch --show-current)"

      - name: Read .nvmrc
        id: node_version
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: Read go.mod
        id: go_version
        run: echo "GO_VERSION=$(grep '^go ' go.mod | cut -d' ' -f2)" >> $GITHUB_OUTPUT

      - name: Read package.json version
        id: package_version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.node_version.outputs.NODE_VERSION }}
          cache: 'yarn'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.go_version.outputs.GO_VERSION }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run unit tests
        if: ${{ !inputs.dev_release }}
        run: yarn run test

      - name: Run playwright tests
        if: ${{ !inputs.dev_release }}
        run: yarn run test:e2e

      - name: Build frontend
        run: yarn run build

      - name: Read mage version
        id: mage_version
        run: echo "MAGE_VERSION=$(grep 'github.com/magefile/mage' go.mod | cut -d' ' -f2)" >> $GITHUB_OUTPUT

      - name: Install mage
        run: |
          go install github.com/magefile/mage@${{ steps.mage_version.outputs.MAGE_VERSION }}

      - name: Build backend
        run: mage -v

      - name: Sign plugin
        env:
          GRAFANA_ACCESS_POLICY_TOKEN: ${{ secrets.GRAFANA_ACCESS_POLICY_TOKEN_FOR_SIGNING }}
        run: npx @grafana/sign-plugin@latest

      - name: Validate plugin
        run: npx @grafana/plugin-validator@latest -sourceCodeUri file://. dist/

      - name: Package plugin
        run: |
          cd dist
          zip -r ../startree-pinot-datasource-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip .
          cd ..

      - name: Upload plugin
        uses: actions/upload-artifact@v4
        with:
          name: startree-pinot-datasource-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip
          path: startree-pinot-datasource-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip
