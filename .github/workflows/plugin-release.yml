name: Build plugin for Grafana Marketplace

on:
  workflow_dispatch:
    inputs:
      dev_release:
        description: "Dev build for testing"
        type: boolean

run-name: ${{ inputs.dev_release && 'Dev Build' || 'Build' }} from ${{ github.ref_name }} triggered by @${{ github.actor }}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Display build info
        run: |
          echo "Building from branch: ${{ github.ref_name }}"
          echo "Dev release mode: ${{ inputs.dev_release }}"
          echo "Current commit: $(git rev-parse HEAD)"
          echo "Current branch: $(git branch --show-current)"
      - name: Read .nvmrc
        id: node_version
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: Read go.mod
        id: go_version
        run: echo "GO_VERSION=$(grep '^go ' go.mod | cut -d' ' -f2)" >> $GITHUB_OUTPUT

      - name: Read package.json version
        id: package_version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: ${{ steps.node_version.outputs.NODE_VERSION }}
      #     cache: 'yarn'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.go_version.outputs.GO_VERSION }}

      # - name: Install dependencies
      #   run: yarn install --frozen-lockfile

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: repo.startreedata.io/startree-docker-registry
          username: ${{ secrets.MVN_ARTIFACTORY_USERNAME }}
          password: ${{ secrets.MVN_ARTIFACTORY_TOKEN }}

      - name: Start Pinot
        run: docker compose up pinot --quiet-pull --detach

      - name: Setup Pinot
        run: go run cmd/testsetup/main.go

      - name: Remove Go after Pinot setup
        run: |
          echo "Removing Go installation and cache..."
          sudo rm -rf /usr/local/go
          sudo rm -rf ~/go/pkg/mod
          sudo rm -rf ~/.cache/go-build
          sudo apt-get purge -ury golang* || true
          sudo apt-get autoremove -y || true
          echo "Go successfully removed."
          which go || echo "Go no longer available."

      # - name: Run unit tests
      #   if: ${{ !inputs.dev_release }}
      #   run: yarn run test

      # - name: Run playwright tests
      #   if: ${{ !inputs.dev_release }}
      #   run: yarn run test:e2e

      - name: Build plugin
        uses: grafana/plugin-actions/build-plugin@main
        with:
          use_changelog_generator: true
          # TODO: uncomment this when we our plugin is ready for signing publicly
          # policy_token: ${{ secrets.GRAFANA_ACCESS_POLICY_TOKEN_FOR_SIGNING }}
          go-version: ${{ steps.go_version.outputs.GO_VERSION }}
          node-version: ${{ steps.node_version.outputs.NODE_VERSION }}
          attestation: false
      
          