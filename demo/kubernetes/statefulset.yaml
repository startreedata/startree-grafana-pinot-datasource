apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pinot-grafana-demo
  namespace: cell-9itmgf-default
spec:
  serviceName: pinot-grafana-demo
  replicas: 1
  selector:
    matchLabels:
      app: pinot-grafana-demo
  template:
    metadata:
      labels:
        app: pinot-grafana-demo
    spec:
      volumes:
        - name: pinot-grafana-demo-config
          configMap:
            name: pinot-grafana-demo-config
            defaultMode: 420
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: pinot-grafana-demo
          image: grafana/grafana-enterprise:9.1.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 500m
              memory: 1500Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: data
            - name: pinot-grafana-demo-config
              readOnly: true
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem


